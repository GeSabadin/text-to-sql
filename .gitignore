# .gitignore para projetos Python
# 1. Ambientes Virtuais
# Essencial para não enviar centenas de megabytes de bibliotecas.
# -------------------------------------------------------------------
venv/
.venv/
env/
.env
env.bak
.envrc

# 2. Cache e arquivos compilados do Python
# Gerados automaticamente pelo interpretador Python.
# -------------------------------------------------------------------
__pycache__/
*.py[cod]
*$py.class

# 3. Pacotes e distribuição
# Pastas e arquivos gerados ao construir um pacote para distribuição (PyPI).
# -------------------------------------------------------------------
build/
dist/
*.egg-info/
*.egg
wheelhouse/
pip-wheel-metadata/
develop-eggs/
parts/
sdist/
var/

# 4. Arquivos de configuração de IDEs e Editores
# Evita conflitos de configuração de editor entre desenvolvedores.
# -------------------------------------------------------------------
.vscode/
.idea/           # Para PyCharm, IntelliJ, etc.
*.sublime-project
*.sublime-workspace
.project
.pydevproject
.settings/
.DS_Store      # Específico do macOS, mas bom ter por precaução.

# 5. Arquivos de Teste e Cobertura de Código
# Relatórios e caches gerados por ferramentas de teste.
# -------------------------------------------------------------------
.pytest_cache/
.coverage
.coverage.*
htmlcov/
nosetests.xml
coverage.xml
*.prof
*.lprof
*.prof

# 6. Arquivos específicos do sistema (Ubuntu/Linux)
# Arquivos temporários ou de backup comuns em sistemas Linux.
# -------------------------------------------------------------------
*~             # Arquivos de backup do editor (ex: Gedit, Vim)
.*.swp         # Arquivos swap do Vim
.directory     # Arquivos de metadados de pastas do KDE



# 8. Bancos de Dados e Logs
# Nunca versione bancos de dados locais ou arquivos de log.
# -------------------------------------------------------------------
*.db
*.sqlite3
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
